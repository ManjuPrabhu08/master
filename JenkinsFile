pipeline {
    agent any

    environment {
        APP_NAME = 'MCP_Assignment'
        BUILD_ENV = 'Devlopment'
        VENV_DIR = 'venv'
    }

    stages {
        stage('Checkout') {
            steps {
                echo "Cloning repository..."
                git branch: 'master', url: 'https://github.com/ManjuPrabhu08/master.git'
            }
        }

        stage('Setup Python Environment') {
            steps {
                echo "Creating Python virtual environment and installing dependencies..."
                sh '''
                    python3 -m venv ${VENV_DIR}
                    . ${VENV_DIR}/bin/activate
                    pip install --upgrade pip
                    pip install -r requirements.txt
                '''
            }
        }

        stage('Test') {
            steps {
                echo "Running Python tests (if any)..."
                sh '''
                    . ${VENV_DIR}/bin/activate
                    pytest || echo "No tests found, skipping..."
                '''
            }
        }

        stage('Run MCP Server') {
            steps {
                echo "Starting MCP server..."
                sh '''
                    . ${VENV_DIR}/bin/activate
                    nohup python mcp_server.py > server.log 2>&1 &
                    echo $! > server.pid
                '''
            }
        }

        stage('Run MCP Client') {
            steps {
                echo "Running MCP client..."
                sh '''
                    . ${VENV_DIR}/bin/activate
                    python mcp_client.py
                '''
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline completed successfully!'
        }
        failure {
            echo '❌ Pipeline failed!'
        }
        always {
            echo 'Cleaning up server if running...'
            sh '''
                if [ -f server.pid ]; then
                    kill $(cat server.pid) || true
                    rm -f server.pid
                fi
            '''
        }
    }
}
